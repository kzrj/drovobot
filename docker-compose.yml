version: '3'

services:

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:8080"
      - "443:443"
    volumes:
      - .:/code
      - ./nginx:/etc/nginx/conf.d
   
    depends_on:
      - backend
    
  db:
    image: postgres:10.1-alpine
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data

  rabbit:
    # restart: unless-stopped 
    hostname: rabbit
    image: rabbitmq:latest
    # volumes:
    #   - ./rabbit_data:/var/lib/rabbitmq/mnesia/rabbit@rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=qwerty123
    ports:
      - "5673:5672"
        
  backend:
    build: .
    # restart: unless-stopped
    volumes:
      - .:/code
    depends_on:
      - db

    command: bash -c "cd drovobot && 
                      python manage.py makemigrations --no-input &&
                      python manage.py migrate &&
                      python manage.py collectstatic --no-input &&
                      gunicorn drovobot.wsgi -b 0.0.0.0:8000"

    
    volumes:
      - .:/code
      # - ./media:/code/media
    ports:
      - "8000"

  worker:
    build: .
    # restart: unless-stopped
    volumes:
      - .:/code
    links:
      - db
      - rabbit
    depends_on:
      - rabbit
    command: bash -c "cd drovobot && celery -A drovobot worker --loglevel=info"
        
  # # for test only
  # flower:
  #   build: .
  #   volumes:
  #     - .:/code
  #   ports:
  #    - "5555:5555"
  #   links:
  #     - db
  #     - rabbit
  #     - worker
  #   depends_on:
  #     - worker
  #     - rabbit
  #   command: bash -c "cd drovobot && celery -A drovobot.celery flower --port=5555"

# volumes:
  # postgres_data:
  # rabbit_data:
